# Do not edit, this is autogenerated
# {{ license_notice }}
###############################################################################
from enum import IntEnum
from base import FixedArray
{% for inc in includes %}
from {{ inc }} import *
{% endfor %}

{%- if enums|length > 0 %}
{%- for enum in enums %}
class {{ enum.name }}(IntEnum):
{%- for val in enum.fields %}
    {{ val.name }} = {{ val.value }} {%- if loop.index != loop.length %} {% endif %}
{%- endfor %}
{% endfor %}
{% endif %}


{% for msg in messages %}
class {{ msg.name }}:
  """
  {{ msg.name }}
  {% for comm in msg.comments -%}
  {{ comm }}
  {% endfor -%}
  """
  def __init__(self):
    {%- for var in msg.fields %}
    self.{{ var.name }} {% if var.default %}= {{ var.default }} {% endif %}
    {%- endfor %}

    self.id = msg.id
    self.fmt = msg.fmt
    self.

  def __yivo__(self):
    # (fmt, size, name, id)
    # name_t.__class__ already has name, do I need it again?
    {# return ("{{ format }}", {{ msg_size }}, {{ name }}_t, {{ msgid }}) #}
    return ("{{ msg.fmt }}", {{ msg.size }}, {{ msg.id }})
{% endfor %}